{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["globalusers","date_format","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","React","Component","Forums","props","messagesEndRef","createRef","scrollToBottom","current","scrollIntoView","behavior","tmp","globalMessage","state","this","forums","id","map","messageItem","type","time","username","message","ref","MessageBar","disconnect","sendingHandler","bind","swit","prop","console","log","setState","event","target","value","messageToken","sessionStorage","getItem","nativeEvent","keyCode","preventDefault","form","FormData","append","request","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","getResponseHeader","setItem","send","onChange","onKeyPress","defaultValue","disabled","Clock","timer","timerID","setInterval","tick","MainApp","messageBarEle","usersList","joinHandler","messageHandler","partHandler","usersHandler","disconnectHandler","serverStatusHandler","errorHandler","openHandler","lastHandler","data","JSON","parse","tmpHash","user","push","stream","close","render","document","getElementById","tmp2","arr","index","indexOf","splice","removeItemOnce","users","lastEventId","includes","EventSource","addEventListener","elem","scrollTop","scrollHeight","className","LoginPage","userVal","urlVal","passVal","urlHandler","userHandler","passwordHandler","handleEnter","url","password","alert","responseText","message_token","stream_token","App","window","onunload","removeItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.6cd4c607.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport \"./login-page.css\";\nimport { render } from \"react-dom\";\nvar globalusers = [];\n\nfunction removeItemOnce(arr, value) {\n  var index = arr.indexOf(value);\n  if (index > -1) {\n    arr.splice(index, 1);\n  }\n  return arr;\n}\n\n\nfunction date_format(timestamp) {\n  var date = new Date(timestamp * 1000);\n  return (\n    date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\")\n  );\n}\nclass MessageBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: null,\n      username: null,\n      time: null\n    };\n  }\n  render() {\n    return (\n      <p>\n        {this.state.time} {this.state.user} {this.state.message}\n      </p>\n    );\n  }\n}\nclass Forums extends React.Component {\n  forums;\n  messagesEndRef = React.createRef();\n  constructor(props) {\n\t // console.log(\"forums construct\");\n    super(props);\n    var tmp = this.props.globalMessage;\n    this.state = {\n      globalMessage: tmp\n    };\n  }\n  \n  componentDidMount () {\n    this.scrollToBottom()\n  }\n  componentDidUpdate () {\n    this.scrollToBottom()\n  }\n  scrollToBottom = () => {\n    this.messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n  }\n  render() {\n\t//console.log(\"forums rendered\");\n    return (this.forums = (\n      <div id=\"column-middle\">\n        {this.state.globalMessage.map((messageItem) => {\n          if (messageItem.type === \"message\")\n            return (\n              <div>\n                {date_format(messageItem.time)} {messageItem.username} {messageItem.message}\n              </div>\n            );\n          else if (messageItem.type === \"server\")\n            return (\n              <div>\n                {date_format(messageItem.time)} {messageItem.message}\n              </div>\n            );\n          else if (messageItem.type === \"part\")\n            return (\n              <div>\n                {date_format(messageItem.time)} {messageItem.username} has part\n              </div>\n            );\n            else if (messageItem.type === \"join\")\n            return (\n              <div>\n                {date_format(messageItem.time)} {messageItem.username} has join\n              </div>\n            );\n          else return <div />;\n        })}\n      <div ref={this.messagesEndRef} />\n      </div>\n    ));\n  }\n}\n\nclass MessageBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: null,\n      disconnect: false\n    };\n    this.sendingHandler = this.sendingHandler.bind(this);\n    this.swit = this.swit.bind(this);\n  }\n\n  /*componentWillReceiveProps(nextProps) {\n    this.setState({ disconnect: this.props.disconnect });\n  }*/\n  swit(prop){\n\t  console.log(\"ppp\")\n\t  this.setState({'disconnect':prop});\n\t  console.log(this.state.disconnect)\n\t  }\n  sendingHandler(event) {\n    this.setState({ message: event.target.value });\n    var messageToken = sessionStorage.getItem(\"messageToken\");\n    if (messageToken === null || event.nativeEvent.keyCode !== 13) {\n      console.log(\"token invalid or keycode\");\n      return;\n    }\n\n    event.preventDefault();\n    if (this.state.message === \"\") {\n      return;\n    }\n\n    var form = new FormData();\n    form.append(\"message\", this.state.message);\n    var request = new XMLHttpRequest();\n    request.open(\"POST\", sessionStorage.getItem(\"url\") + \"/message\");\n    request.setRequestHeader(\"Authorization\", \"Bearer \" + messageToken);\n    request.onreadystatechange = function (event) {\n      if (\n        event.target.readyState === 4 &&\n        event.target.status !== 403 &&\n        messageToken != null\n      ) {\n        messageToken = event.target.getResponseHeader(\"token\");\n        sessionStorage.setItem(\"messageToken\", messageToken);\n      }\n    };\n    request.send(form);\n    sessionStorage.setItem(\"messageToken\", null);\n    event.target.value = \"\";\n    this.setState({ message: event.target.value });\n  }\n  render() {\n    return (\n      <input\n        id=\"message\"\n        onChange={this.sendingHandler}\n        onKeyPress={this.sendingHandler}\n        type=\"text\"\n        defaultValue={this.state.disconnect ? \"disconnect\" : \"\"}\n        disabled={this.state.disconnect}\n      />\n    );\n  }\n}\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { timer: new Date() };\n  }\n  tick() {\n    this.setState({ timer: new Date() });\n  }\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n  render() {\n    return <div id=\"time\">{this.state.timer.toLocaleTimeString()}  online users</div>;\n  }\n}\nclass UsersList extends React.Component {\n  constructor(props) {\n\t//console.log(\"users construct\");\n    super(props);\n    var tmp = globalusers;\n    //console.log(globalusers)\n    this.state = {\n      usersList: tmp\n\t};\n  }\n\n   componentDidUpdate(prevProps) {\n\tif(prevProps.usersList !== this.props.usersList) {\n\t\tthis.setState({usersList: this.props.usersList});\n\t}\n  }\n\n  render() {\n\t  //console.log(\"users rendered\");\n\t  //console.log(this.state.usersList)\n\t\t//console.log(globalusers)\n    return (\n      <ul id=\"user_list\">\n        {this.state.usersList.map((users) => (\n          <li> {users} </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nclass MainApp extends React.Component {\n  stream;\n  messageBarEle = React.createRef();\n  constructor(props) {\n    super(props);\n    this.state = {\n      globalMessage: [],\n      usersList: [],\n      message: \"\",\n      disconnect: true\n    };\n    //this.start_stream = this.start_stream.bind(this);\n    this.joinHandler = this.joinHandler.bind(this);\n    this.messageHandler = this.messageHandler.bind(this);\n    this.partHandler = this.partHandler.bind(this);\n    this.usersHandler = this.usersHandler.bind(this);\n    this.disconnectHandler = this.disconnectHandler.bind(this);\n    this.serverStatusHandler = this.serverStatusHandler.bind(this);\n    this.errorHandler = this.errorHandler.bind(this);\n    this.openHandler = this.openHandler.bind(this);\n    this.lastHandler = this.lastHandler.bind(this);\n    //console.log(\"main construct\");\n  }\n  /*tick() {\n    this.setState({ timer: new Date() });\n  }\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }*/\n  errorHandler(event) {\n\t  console.log(\"error\")\n\t  this.messageBarEle.current.swit(true)\n\t  this.setState({usersList:[],disconnect:true})\n      console.log(\"Disconnected, retrying\");\n    //}\n  }\n  messageHandler(event) {\n    var data = JSON.parse(event.data);\n    var tmpHash = {\n      time: data[\"created\"],\n      username: data.user,\n      message: data.message,\n      type: \"message\"\n    };\n    var tmp = this.state.globalMessage;\n    tmp.push(tmpHash);\n    this.setState({ globalMessage: tmp });\n    console.log(\"message\")\n  }\n\n  disconnectHandler(event) {\n    this.stream.close();\n    this.setState({usersList:[],disconnect:true})\n    sessionStorage.setItem(\"messageToken\", null);\n    sessionStorage.setItem(\"streamToken\", null);\n    render(<LoginPage />, document.getElementById(\"root\"));\n    console.log(\"disconnect\")\n  }\n  \n  partHandler(event) {\n    var data = JSON.parse(event.data);\n    var tmpHash = {\n      time: data[\"created\"],\n      username: data.user,\n      message: null,\n      type: \"part\"\n    };\n    var tmp = this.state.globalMessage;\n    tmp.push(tmpHash);\n    this.setState({ globalMessage: tmp });\n    console.log(this.state.globalMessage)\n    var tmp2 = removeItemOnce(this.state.usersList,data.user)\n    this.setState( {usersList: tmp2})\n    console.log(\"part\")\n  }\n  openHandler(event){\n\t  this.setState({disconnect: false});\n\t  this.messageBarEle.current.swit(false)\n\t  console.log(\"open\")\n\t  }\n  usersHandler(event) {\n\tconsole.log(\"users\")\n    var data = JSON.parse(event.data).users;\n    //console.log(data)\n    this.setState({ usersList: data});\n    globalusers = data;\n  }\n  serverStatusHandler(event) {\n    var data = JSON.parse(event.data);\n    var tmpHash = {\n      time: data[\"created\"],\n      username: null,\n      message: data.status,\n      type: \"server\"\n    };\n    var tmp = this.state.globalMessage;\n    tmp.push(tmpHash);\n    this.setState({ globalMessage: tmp });\n    console.log(\"server\")\n  }\n  \n\tlastHandler(event) {\n    console.log('Received a message event: [' + event.lastEventId + ']', event.data);\n\t}\n  \n  joinHandler(event) {\n    var data = JSON.parse(event.data);\n    var tmpHash = {\n      time: data[\"created\"],\n      username: data.user,\n      message: null,\n      type: \"join\"\n    };\n    var tmp = this.state.globalMessage;\n    tmp.push(tmpHash);\n    this.setState({ globalMessage: tmp });\n    console.log(data.user)\n    if (!this.state.usersList.includes(data.user)){\n\t\tthis.state.usersList.push(data.user);\n\t\tthis.setState(function(state) {\n\t\t  return {\n\t\t\tusersList: state.usersList\n\t\t  };\n\t\t});\n\t}\n    console.log(\"join\")\n  }\n  componentDidMount() {\n    this.stream = new EventSource(\n      sessionStorage.getItem(\"url\") +\n        \"/stream/\" +\n        sessionStorage.getItem(\"streamToken\")\n    );\n    this.stream.addEventListener(\"error\", this.errorHandler, false);\n    this.stream.addEventListener(\"Disconnect\", this.disconnectHandler, false);\n    this.stream.addEventListener(\"Message\", this.messageHandler, false);\n    this.stream.addEventListener(\"Part\", this.partHandler, false);\n    this.stream.addEventListener(\n      \"ServerStatus\",\n      this.serverStatusHandler,\n      false\n    );\n    this.stream.addEventListener('Message', this.lastHandler, false);\n    this.stream.addEventListener(\"open\", this.openHandler);\n    this.stream.addEventListener(\"Users\", this.usersHandler, false);\n    this.stream.addEventListener(\"Join\", this.joinHandler, false);\n    var elem = document.getElementById('column-middle');\n\telem.scrollTop = elem.scrollHeight;\n  }\n  render() {\n    //console.log(\"Main rendered\");\n    //console.log(this.state.usersList)\n    //console.log(globalusers)\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div id=\"welcome-notice\">\n            welcome {this.state.disconnect?\"reconnecting\":sessionStorage.getItem(\"username\")}\n          </div>\n        </header>\n        <div className=\"App-body\">\n          <div className=\"sub-title\">\n            <div id=\"webpage-name\"> suebchat </div>\n            <div id=\"subtitle-main\">Forums </div>\n            <Clock />\n          </div>\n        </div>\n        <div className=\"App-main\">\n          <div id=\"column-left\">\n            <li id=\"stream\">streams</li>\n          </div>\n          <Forums globalMessage={this.state.globalMessage} />\n          <div id=\"column-right\">\n            <ul id=\"user_list\"> \n\t\t\t\t{this.state.usersList.map((users) => (\n\t\t\t\t\t<li> {users} </li>\n\t\t\t\t))}\n\t\t\t</ul>\n          </div>\n        </div>\n        <footer>\n          <MessageBar disconnect={this.state.disconnect} ref={this.messageBarEle}/>\n        </footer>\n      </div>\n    );\n  }\n}\n\nclass LoginPage extends React.Component {\n  username;\n  url;\n  password;\n  urlValue;\n  constructor(props) {\n    super(props);\n    this.state = {\n      userVal: \"\",\n      urlVal: \"http://localhost:3001\",\n      passVal: \"\"\n    };\n    this.urlHandler = this.urlHandler.bind(this);\n    this.userHandler = this.userHandler.bind(this);\n    this.passwordHandler = this.passwordHandler.bind(this);\n    this.handleEnter = this.handleEnter.bind(this);\n    this.username = (\n      <input id=\"username\" onChange={this.userHandler} type=\"text\" />\n    );\n    this.url = (\n      <input\n        id=\"url\"\n        defaultValue={\"http://localhost:3001\"}\n        onChange={this.urlHandler}\n        type=\"text\"\n      ></input>\n    );\n    this.password = (\n      <input id=\"password\" onChange={this.passwordHandler} type=\"password\" />\n    );\n  }\n  /*componentDidMount() {\n    this.urlHandler = this.urlHandler.bind(this);\n    this.userHandler = this.userHandler.bind(this);\n    this.passwordHandler = this.passwordHandler.bind(this);\n  }*/\n  userHandler(event) {\n    this.setState({ userVal: event.target.value });\n  }\n  urlHandler(event) {\n    this.setState({ urlVal: event.target.value });\n  }\n  passwordHandler(event) {\n    this.setState({ passVal: event.target.value });\n  }\n  handleEnter(event) {\n    if (event.nativeEvent.keyCode === 13) {\n      console.log(\"running\");\n      if (!this.state.passVal || !this.state.userVal || !this.state.urlVal) {\n        alert(\"empty fields!\");\n        console.log(this.state.passVal);\n        console.log(this.state.userVal);\n        console.log(this.state.urlVal);\n        return;\n      } else {\n        var form = new FormData();\n        form.append(\"password\", this.state.passVal);\n        form.append(\"username\", this.state.userVal);\n        sessionStorage.setItem(\"url\", this.state.urlVal);\n        const request = new XMLHttpRequest(),\n          method = \"POST\",\n          url = sessionStorage.getItem(\"url\");\n        request.open(method, url + \"/login\", true);\n        //const request = new XMLHttpRequest(),\"GET\",sessionStorage.getItem(\"url\");\n        request.onreadystatechange = function () {\n          if (request.readyState !== 4) {\n            return;\n          }\n          if (request.status === 201) {\n            const data = JSON.parse(this.responseText);\n            sessionStorage.setItem(\"messageToken\", data.message_token);\n            sessionStorage.setItem(\"streamToken\", data.stream_token);\n            render(<MainApp />, document.getElementById(\"root\"));\n            return;\n          } else if (request.status === 403) {\n            alert(\"Invalid username or password\");\n            return;\n          } else if (request.status === 200) {\n            return;\n          } else {\n            alert(request.status + \" failure to /login\");\n            return;\n          }\n        };\n        sessionStorage.setItem(\"username\", this.state.userVal);\n        request.send(form);\n      }\n    } else {\n      return;\n    }\n  }\n  render() {\n    return (\n      <div id=\"login-modal\">\n        <div className=\"content\" onKeyPress={this.handleEnter}>\n          <h2>Login</h2>\n          <div>\n            <label>\n              Chat URL <br />\n              {this.url}\n            </label>\n          </div>\n          <div>\n            <label>\n              Username <br />\n              {this.username}\n            </label>\n          </div>\n          <div>\n            <label>\n              Password <br />\n              {this.password}\n            </label>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default function App() {\n  if (sessionStorage.getItem(\"messageToken\") === null) {\n    //alert(\"login-show\");\n    return <LoginPage />;\n  } else {\n    //console.log(sessionStorage.getItem(\"messageToken\"));\n    return <MainApp />;\n  }\n}\n\nwindow.onunload = function () {\n  sessionStorage.removeItem(\"messageToken\");\n  sessionStorage.removeItem(\"streamToken\");\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n/*function rend() {\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>,\n\t\tdocument.getElementById('root')\n\t);\n}*/\nfunction rendding() {\n  ReactDOM.render(<App />, rootElement);\n}\n\nconst rootElement = document.getElementById(\"root\");\nrendding();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}